set nocompatible              " be iMproved, required by Vundle
set t_Co=256                  " 256 colors
set encoding=utf-8
set lazyredraw

call plug#begin("~/.vim/plugged")

  " A colorful, dark color scheme
  Plug 'nanotech/jellybeans.vim'

  " fugitive.vim: a Git wrapper so awesome, it should be illegal
  Plug 'tpope/vim-fugitive'

  " resolving conflicts in git the better way
  Plug 'christoomey/vim-conflicted'

  " Lean & mean status/tabline for vim that's light as air.
  Plug 'bling/vim-airline'
  Plug 'vim-airline/vim-airline-themes'

  " file manager (leader+n)
  Plug 'scrooloose/nerdtree'

  " visualizing marks
  " show marks left to line numbers
  Plug 'kshenoy/vim-signature'

  " python formatting
  Plug 'hynek/vim-python-pep8-indent'

  " autoformatting c++ code
  Plug 'https://github.com/rhysd/vim-clang-format'

  " commenting stuff made easy
  " try gc<motion>
  Plug 'tpope/vim-commentary'

  " Latex stuff
  Plug 'lervag/vimtex'

call plug#end()

" better intendation Ctrl + >
vnoremap < <gv
vnoremap > >gv

"set number of undos
set undolevels=700

"make backspace always work
set backspace=indent,eol,start

" wrap cursor on endline
set whichwrap+=<,>,h,l,[,]

"clipboard
set clipboard=unnamedplus     " shared clipboard with the system

" use enter to create new lines w/o entering insert mode
nnoremap <CR> o

" some color stuff
syntax enable

" general vim settings
" more natural splits
set splitbelow
set splitright

" set line numbering
set number

" indention
set expandtab                   " tab inserts spaces
set shiftwidth=2
set softtabstop=2
set autoindent                  " copy the indention from the last line
set smartindent                 " sometimes indent extra indention
set tabstop=2                   " width of the tab character
set scrolloff=10                " ads cursor margin for the edge of the page
set relativenumber              " turn on relative numbering of lines

set showmatch                   " brief jump to matching parent
set title

" searching and patterns
set ignorecase
set smartcase
set hlsearch
set incsearch

" syntax highlighting for only first ** characters of each line
set synmaxcol=400

" map the leader key
nnoremap , <NOP>
let mapleader = ","
nnoremap <space> <NOP>
let maplocalleader = "`"

" wildmenu for file name suggestion while opening
set wildmenu
set wildmode=full

" should fix colors in tmux
if !has("nvim")
  set term=screen-256color
else

  cnoreabbrev vt VTerm
  cnoreabbrev st Term

endif

" remap split navigations to ctrl + hjkl
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" format whole document and return back
nmap <leader>g :normal mggg=G'g<cr>:delmarks g<cr>zt:%s/\s\+$//g<cr>

" safe deleting things using <leader>d
nmap <leader>d "_d

" line breaking
set wrap
set linebreak
set nolist  " list disables linebreak
set wrapmargin=0
set textwidth=0

" folding by marker for various file types
au FileType m,matlab set foldmethod=marker
au FileType m,matlab set foldmarker=%\ %{,%\ %}

au BufNewFile,BufRead *.sk setf sketch
au FileType sk,sketch set foldmethod=marker
au FileType sk,sketch set foldmarker=%\ %{,%\ %}

au FileType bib,yml,yaml,sh,conf,python set foldmethod=marker
au FileType bib,yml,yaml,sh,conf,python set foldmarker=#\ #{,#\ #}

au FileType cpp set foldmethod=marker
au FileType cpp set foldmarker=//{,//}

au BufNewFile,BufRead *.sk setf sketch
au FileType sk,sketch set foldmethod=marker
au FileType sk,sketch set foldmarker=%\ %{,%\ %}

" remap "gf" to "gf in new tab"
nnoremap gf <C-W>gf

" plugin settings for "normal" vim

  " config for airline
  source ~/.vim/pluginconfig/vim-airline.vim

  " config for nerdtree
  source ~/.vim/pluginconfig/nerdtree.vim

  " config for vim-commentary
  source ~/.vim/pluginconfig/vim-commentary.vim

  " set vim and airline colorscheme

  if !empty($LIGHT_MODE)
    if $LIGHT_MODE
      colorscheme raggi
      let g:airline_theme='papercolor'
    else
      colorscheme jellybeans
      let g:airline_theme='jellybeans'
    endif
  else
    colorscheme jellybeans
    let g:airline_theme='jellybeans'
  endif
  
